import boto3
import os
from botocore.client import Config
import logging

# –õ–æ–≥–≥–µ—Ä —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–æ–≤
logger = logging.getLogger(__name__)

class S3Client:
    def __init__(self):
        endpoint_url = os.getenv("S3_ENDPOINT_URL")
        self.client = boto3.client(
            "s3",
            aws_access_key_id=os.getenv("AWS_ACCESS_KEY_ID"),
            aws_secret_access_key=os.getenv("AWS_SECRET_ACCESS_KEY"),
            region_name=os.getenv("AWS_DEFAULT_REGION"),
            endpoint_url=endpoint_url,
            config=Config(
                signature_version="s3",
                s3={
                    "addressing_style": "path",
                    "payload_signing_enabled": False,
                },
            ),
        )
        self.bucket = os.getenv("S3_BUCKET_NAME")
        logger.info(f"‚òÅÔ∏è S3 –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è –±–∞–∫–µ—Ç–∞: {self.bucket}")

    def upload_file(self, file_path: str, object_name: str):
        try:
            file_size = os.path.getsize(file_path) / 1024 / 1024
            logger.info(f"‚òÅÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ {file_path} —Ä–∞–∑–º–µ—Ä–æ–º {file_size:.2f} MB –≤ S3")
            logger.debug(f"üì§ –ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ S3: {object_name} –∏–∑ {file_path}")
            
            self.client.upload_file(file_path, self.bucket, object_name)
            
            logger.info(f"‚úÖ –§–∞–π–ª {object_name} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ S3")
            logger.debug(f"üì• –ó–∞–≥—Ä—É–∑–∫–∞ –≤ S3 –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {object_name}")
            return True
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ S3: {e}")
            raise

    def generate_presigned_url(self, object_name: str, expiration: int = 3600):
        try:
            url = self.client.generate_presigned_url(
                "get_object",
                Params={"Bucket": self.bucket, "Key": object_name},
                ExpiresIn=expiration,
            )
            logger.debug(f"üîó –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω presigned URL –¥–ª—è {object_name}")
            return url
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL: {e}")
            raise